[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0.0-rc.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0.0-rc.0", features = [ "macos-private-api", "tray-icon"] }
tauri-plugin-positioner = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v2", features = ["tray-icon"] , version = "2.0.0-rc.0" }
tauri-plugin-stronghold = { version = "2.0.0-rc.0" }
ollama-rs = "0.1.9"
async-openai = "0.20.0"
tauri-plugin-store = "2.0.0-rc.0"
tauri-plugin-log = "2.0.0-rc.0"
tauri-plugin-shell = "2.0.0-rc.0"
tauri-plugin-clipboard-manager = "2.0.0-rc.0"
tauri-plugin-dialog = "2.0.0-rc.0"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["winuser", "winbase", "winnt", "winnls"] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]

[target."cfg(not(any(target_os = \"android\", target_os = \"ios\")))".dependencies]
tauri-plugin-global-shortcut = "2.0.1"
